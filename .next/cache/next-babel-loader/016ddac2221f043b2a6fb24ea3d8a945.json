{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box } from 'theme-ui';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from 'components/drawer';\nimport { IoMdClose, IoMdMenu } from 'react-icons/io';\nimport { Link } from 'react-scroll';\nimport { FaFacebookF, FaTwitter, FaGithubAlt, FaDribbble } from 'react-icons/fa';\nimport menuItems from './header.data';\nvar social = [{\n  path: '/',\n  icon: __jsx(FaFacebookF, null)\n}, {\n  path: '/',\n  icon: __jsx(FaTwitter, null)\n}, {\n  path: '/',\n  icon: __jsx(FaGithubAlt, null)\n}, {\n  path: '/',\n  icon: __jsx(FaDribbble, null)\n}];\n\nvar MobileDrawer = function MobileDrawer() {\n  var _useState = useState(false),\n      isDrawerOpen = _useState[0],\n      setIsDrawerOpen = _useState[1];\n\n  var toggleHandler = function toggleHandler() {\n    setIsDrawerOpen(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  return __jsx(Drawer, {\n    width: \"320px\",\n    drawerHandler: __jsx(Box, {\n      sx: styles.handler\n    }, __jsx(IoMdMenu, {\n      size: \"26px\"\n    })),\n    open: isDrawerOpen,\n    toggleHandler: toggleHandler,\n    closeButton: __jsx(IoMdClose, {\n      size: \"24px\",\n      color: \"#000000\"\n    }),\n    drawerStyle: styles.drawer,\n    closeBtnStyle: styles.close\n  }, __jsx(Scrollbars, {\n    autoHide: true\n  }, __jsx(Box, {\n    sx: styles.content\n  }, __jsx(Box, {\n    sx: styles.menu\n  }, menuItems.map(function (_ref, i) {\n    var path = _ref.path,\n        label = _ref.label;\n    return __jsx(Link, {\n      activeClass: \"active\",\n      to: path,\n      spy: true,\n      smooth: true,\n      offset: -70,\n      duration: 500,\n      key: i\n    }, label);\n  })), __jsx(Box, {\n    sx: styles.menuFooter\n  }, __jsx(Box, {\n    sx: styles.social\n  }, social.map(function (_ref2, i) {\n    var path = _ref2.path,\n        icon = _ref2.icon;\n    return __jsx(Box, {\n      as: \"span\",\n      key: i,\n      sx: styles.social.icon\n    }, __jsx(Link, {\n      to: path\n    }, icon));\n  }))))));\n};\n\nvar styles = {\n  handler: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexShrink: '0',\n    width: '26px',\n    '@media screen and (min-width: 1024px)': {\n      display: 'none'\n    }\n  },\n  drawer: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'dark'\n  },\n  close: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: '25px',\n    right: '30px',\n    zIndex: '1',\n    cursor: 'pointer'\n  },\n  content: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    pt: '100px',\n    pb: '40px',\n    px: '30px'\n  },\n  menu: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    a: {\n      fontSize: '16px',\n      fontWeight: '500',\n      color: 'text_white',\n      py: '15px',\n      cursor: 'pointer',\n      borderBottom: '1px solid #e8e5e5',\n      transition: 'all 0.25s',\n      '&:hover': {\n        color: 'secondary'\n      },\n      '&.active': {\n        color: 'secondary'\n      }\n    }\n  },\n  menuFooter: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    mt: 'auto'\n  },\n  social: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    icon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'text',\n      fontSize: 14,\n      mr: '15px',\n      transition: 'all 0.25s',\n      cursor: 'pointer',\n      ':last-child': {\n        mr: '0'\n      },\n      '&:hover': {\n        color: 'secondary'\n      }\n    }\n  },\n  button: {\n    color: 'white',\n    fontSize: '14px',\n    fw: '700',\n    height: '45px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    py: '0'\n  }\n};\nexport default MobileDrawer;","map":null,"metadata":{},"sourceType":"module"}