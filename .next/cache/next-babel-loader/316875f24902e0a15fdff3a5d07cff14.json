{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** @jsx jsx */\nimport { jsx, NavLink as MenuLink, Link as A } from 'theme-ui';\nimport NextLink from 'next/link';\nexport function NavLink(_ref) {\n  let {\n    path,\n    label,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"path\", \"label\", \"children\"]);\n\n  return jsx(NextLink, {\n    href: path\n  }, jsx(MenuLink, rest, children ? children : label));\n}\nexport function Link(_ref2) {\n  let {\n    path,\n    label,\n    children\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, [\"path\", \"label\", \"children\"]);\n\n  return jsx(A, _extends({}, rest, {\n    href: path\n  }), children ? children : label);\n}","map":null,"metadata":{},"sourceType":"module"}